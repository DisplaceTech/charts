name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'containers/**'
      - 'wordpress/**'
      - '.github/workflows/**'
      - 'Makefile'
  pull_request:
    branches: [ main ]
    paths:
      - 'containers/**'
      - 'wordpress/**'
      - '.github/workflows/**'
      - 'Makefile'
  release:
    types: [ published ]

env:
  DOCKER_REGISTRY: ghcr.io
  IMAGE_NAME: wordpress
  WORDPRESS_VERSION: 6.8.2
  PHP_VERSION: 8.4.10
  HELM_CHART_PATH: wordpress
  HELM_RELEASE_NAME: wordpress
  HELM_NAMESPACE: wordpress

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          # Convert repository owner to lowercase
          REPO_OWNER_LOWER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          
          # Build image
          docker build -t ${{ env.DOCKER_REGISTRY }}/$REPO_OWNER_LOWER/${{ env.IMAGE_NAME }}:${{ env.WORDPRESS_VERSION }}-${{ env.PHP_VERSION }} containers/

  build:
    name: Build and Push
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          # Convert repository owner to lowercase
          REPO_OWNER_LOWER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          
          # Build with version tag
          docker build -t ${{ env.DOCKER_REGISTRY }}/$REPO_OWNER_LOWER/${{ env.IMAGE_NAME }}:${{ env.WORDPRESS_VERSION }}-${{ env.PHP_VERSION }} containers/
          
          # Tag as latest
          docker tag ${{ env.DOCKER_REGISTRY }}/$REPO_OWNER_LOWER/${{ env.IMAGE_NAME }}:${{ env.WORDPRESS_VERSION }}-${{ env.PHP_VERSION }} ${{ env.DOCKER_REGISTRY }}/$REPO_OWNER_LOWER/${{ env.IMAGE_NAME }}:latest
          
          # Push images
          docker push ${{ env.DOCKER_REGISTRY }}/$REPO_OWNER_LOWER/${{ env.IMAGE_NAME }}:${{ env.WORDPRESS_VERSION }}-${{ env.PHP_VERSION }}
          docker push ${{ env.DOCKER_REGISTRY }}/$REPO_OWNER_LOWER/${{ env.IMAGE_NAME }}:latest

      - name: Package Helm chart
        run: |
          # Install Helm
          curl https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz | tar xz
          sudo mv linux-amd64/helm /usr/local/bin/
          
          # Package chart
          helm package ${{ env.HELM_CHART_PATH }}
          
          # Create release assets
          mkdir -p dist
          mv *.tgz dist/

      - name: Upload chart artifacts
        uses: actions/upload-artifact@v4
        with:
          name: helm-charts
          path: dist/*.tgz

  # security-scan:
  #   name: Security Scan
  #   runs-on: ubuntu-latest
  #   needs: [test, build]
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Install Trivy
  #       run: |
  #         curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.48.0

  #     - name: Run Trivy vulnerability scanner
  #       run: |
  #         # Convert repository owner to lowercase
  #         REPO_OWNER_LOWER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          
  #         # Run Trivy scan
  #         trivy image --format sarif --output trivy-results.sarif ${{ env.DOCKER_REGISTRY }}/$REPO_OWNER_LOWER/${{ env.IMAGE_NAME }}:${{ env.WORDPRESS_VERSION }}-${{ env.PHP_VERSION }}

  #     - name: Upload Trivy scan results to GitHub Security tab
  #       uses: github/codeql-action/upload-sarif@v3
  #       if: always()
  #       with:
  #         sarif_file: 'trivy-results.sarif'

  update-helm-repo:
    name: Update Helm Repository
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download chart artifacts
        uses: actions/download-artifact@v4
        with:
          name: helm-charts

      - name: Set up Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Update Helm repository
        run: |
          # Clone gh-pages branch
          git clone --branch gh-pages https://github.com/${{ github.repository }}.git gh-pages
          
          # Copy chart packages
          cp *.tgz gh-pages/
          
          # Update index
          cd gh-pages
          helm repo index . --url https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}
          
          # Commit and push
          git add .
          git commit -m "Update Helm repository for release ${{ github.event.release.tag_name }}"
          git push 