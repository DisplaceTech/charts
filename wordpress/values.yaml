# Default values for wordpress chart
# This is a YAML-formatted file.

# Global configuration
global:
  # Default namespace
  namespaceOverride: "wordpress"

# WordPress configuration
wordpress:
  # WordPress image configuration
  image:
    repository: ghcr.io/your-username/wordpress
    tag: "latest"
    pullPolicy: Always
  
  # WordPress replica count
  replicaCount: 1
  
  # WordPress service configuration
  service:
    type: ClusterIP
    port: 80
    targetPort: 80
  
  # WordPress ingress configuration
  ingress:
    enabled: false
    className: "nginx"
    annotations: {}
    hosts:
      - host: wordpress.example.com
        paths:
          - path: /
            pathType: Prefix
    tls: []
  
  # WordPress environment variables
  env:
    WP_DEBUG: "false"
    WP_DEBUG_LOG: "false"
    WP_DEBUG_DISPLAY: "false"
    WP_CACHE: "true"
    REDIS_HOST: "localhost"
    REDIS_PORT: "6379"
    REDIS_PASSWORD: ""
    REDIS_DATABASE: "0"
  
  # WordPress resource limits
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  
  # WordPress security context
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
  
  # WordPress liveness probe
  livenessProbe:
    httpGet:
      path: /wp-admin/admin-ajax.php
      port: 80
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  # WordPress readiness probe
  readinessProbe:
    httpGet:
      path: /wp-admin/admin-ajax.php
      port: 80
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3
  
  # WordPress startup probe
  startupProbe:
    httpGet:
      path: /wp-admin/admin-ajax.php
      port: 80
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 30
  
  # WordPress persistence for uploads
  persistence:
    uploads:
      enabled: true
      size: 5Gi
      storageClass: ""
      accessMode: ReadWriteOnce
      mountPath: /var/www/html/wp-content/uploads

# MySQL configuration
mysql:
  enabled: true
  
  # MySQL image configuration
  image:
    repository: mysql
    tag: "8.0"
    pullPolicy: IfNotPresent
  
  # MySQL service configuration
  service:
    type: ClusterIP
    port: 3306
    targetPort: 3306
  
  # MySQL resource limits
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  
  # MySQL security context
  securityContext:
    runAsUser: 999
    runAsGroup: 999
    fsGroup: 999
  
  # MySQL persistence
  persistence:
    enabled: true
    size: 10Gi
    storageClass: ""
    accessMode: ReadWriteOnce
    mountPath: /var/lib/mysql
  
  # MySQL environment variables
  env:
    MYSQL_ROOT_PASSWORD: ""
    MYSQL_DATABASE: "wordpress"
    MYSQL_USER: "wordpress"
    MYSQL_PASSWORD: ""
  
  # MySQL liveness probe
  livenessProbe:
    exec:
      command:
        - mysqladmin
        - ping
        - -h
        - localhost
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  # MySQL readiness probe
  readinessProbe:
    exec:
      command:
        - mysqladmin
        - ping
        - -h
        - localhost
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

# Redis configuration
redis:
  enabled: true
  
  # Redis image configuration
  image:
    repository: redis
    tag: "7-alpine"
    pullPolicy: IfNotPresent
  
  # Redis service configuration
  service:
    type: ClusterIP
    port: 6379
    targetPort: 6379
  
  # Redis resource limits
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "128Mi"
      cpu: "100m"
  
  # Redis security context
  securityContext:
    runAsUser: 999
    runAsGroup: 999
    fsGroup: 999
  
  # Redis configuration
  config:
    maxmemory: "100mb"
    maxmemory-policy: "allkeys-lru"
    save: "900 1 300 10 60 10000"
  
  # Redis liveness probe
  livenessProbe:
    exec:
      command:
        - redis-cli
        - ping
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  # Redis readiness probe
  readinessProbe:
    exec:
      command:
        - redis-cli
        - ping
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

# Backup configuration
backups:
  enabled: false
  
  # Uploads backup configuration
  uploads:
    schedule: "0 2 * * 0"  # Weekly at 2 AM Sunday
    retention: 30  # Keep backups for 30 days
    resources:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "256Mi"
        cpu: "200m"
  
  # Database backup configuration
  database:
    schedule: "0 3 * * 0"  # Weekly at 3 AM Sunday
    retention: 30  # Keep backups for 30 days
    resources:
      requests:
        memory: "256Mi"
        cpu: "200m"
      limits:
        memory: "512Mi"
        cpu: "400m"

# Secrets configuration
secrets:
  # WordPress secrets
  wordpress:
    name: "wordpress-secrets"
    # These should be created externally
    # db-name: wordpress
    # db-user: wordpress
    # db-password: your-secure-password
    # db-host: mysql
    # wp-auth-key: your-auth-key
    # wp-secure-auth-key: your-secure-auth-key
    # wp-logged-in-key: your-logged-in-key
    # wp-nonce-key: your-nonce-key
    # wp-auth-salt: your-auth-salt
    # wp-secure-auth-salt: your-secure-auth-salt
    # wp-logged-in-salt: your-logged-in-salt
    # wp-nonce-salt: your-nonce-salt
    # wp-admin-email: admin@example.com
    # wp-admin-password: your-admin-password
  
  # MySQL secrets
  mysql:
    name: "mysql-secrets"
    # These should be created externally
    # mysql-root-password: your-root-password
    # mysql-database: wordpress
    # mysql-user: wordpress
    # mysql-password: your-secure-password
  
  # Backup secrets (optional)
  backup:
    name: "backup-secrets"
    # These should be created externally if backups are enabled
    # s3-endpoint: your-s3-endpoint
    # s3-access-key: your-access-key
    # s3-secret-key: your-secret-key
    # s3-bucket: your-backup-bucket
    # s3-region: your-region

# Service account configuration
serviceAccount:
  create: true
  name: "wordpress"
  annotations: {}

# Pod disruption budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1

# Horizontal pod autoscaler
hpa:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Network policies
networkPolicy:
  enabled: false
  ingressRules: []
  egressRules: []

# Pod security standards
podSecurityStandards:
  enabled: true
  level: "restricted" 