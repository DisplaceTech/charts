# Production values for WordPress Helm chart
# Use this file for production deployments

# WordPress configuration
wordpress:
  replicaCount: 3
  
  image:
    repository: ghcr.io/displacetech/wordpress
    tag: "6.8.1-8.4.10"  # Use specific version tag for production
    pullPolicy: Always
  
  service:
    type: ClusterIP
    port: 80
    targetPort: 80
  
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    hosts:
      - host: wordpress.yourdomain.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: wordpress-tls
        hosts:
          - wordpress.yourdomain.com
  
  env:
    WP_DEBUG: "false"
    WP_DEBUG_LOG: "false"
    WP_DEBUG_DISPLAY: "false"
    WP_CACHE: "true"
    REDIS_HOST: "localhost"
    REDIS_PORT: "6379"
    REDIS_PASSWORD: ""
    REDIS_DATABASE: "0"
  
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1Gi"
      cpu: "1000m"
  
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
  
  persistence:
    uploads:
      enabled: true
      size: 20Gi
      storageClass: "fast-ssd"
      accessMode: ReadWriteOnce
      mountPath: /var/www/html/wp-content/uploads

# MySQL configuration
mysql:
  enabled: true
  
  image:
    repository: mysql
    tag: "8.0"
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 3306
    targetPort: 3306
  
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1000m"
  
  persistence:
    enabled: true
    size: 50Gi
    storageClass: "fast-ssd"
    accessMode: ReadWriteOnce
    mountPath: /var/lib/mysql

# Redis configuration
redis:
  enabled: true
  
  image:
    repository: redis
    tag: "7-alpine"
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 6379
    targetPort: 6379
  
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  
  config:
    maxmemory: "200mb"
    maxmemory-policy: "allkeys-lru"
    save: "900 1 300 10 60 10000"

# Backup configuration
backups:
  enabled: true
  
  uploads:
    schedule: "0 2 * * 0"  # Weekly at 2 AM Sunday
    retention: 90  # Keep backups for 90 days
    resources:
      requests:
        memory: "256Mi"
        cpu: "200m"
      limits:
        memory: "512Mi"
        cpu: "400m"
  
  database:
    schedule: "0 3 * * 0"  # Weekly at 3 AM Sunday
    retention: 90  # Keep backups for 90 days
    resources:
      requests:
        memory: "512Mi"
        cpu: "400m"
      limits:
        memory: "1Gi"
        cpu: "800m"

# Service account configuration
serviceAccount:
  create: true
  name: "wordpress"
  annotations: {}

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 2

# Horizontal pod autoscaler
hpa:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Network policies
networkPolicy:
  enabled: true
  ingressRules:
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx
  egressRules:
    - to:
        - namespaceSelector:
            matchLabels:
              name: kube-system
        - podSelector:
            matchLabels:
              k8s-app: kube-dns
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53

# Pod security standards
podSecurityStandards:
  enabled: true
  level: "restricted" 